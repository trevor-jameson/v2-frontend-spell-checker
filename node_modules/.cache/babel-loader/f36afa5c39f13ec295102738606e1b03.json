{"ast":null,"code":"var _jsxFileName = \"/Users/trey/development/spell-checker/v2-frontend-spell-checker/src/components/spells/SpellsPage.js\";\n// NPM imports\nimport React from 'react';\nimport { connect } from 'react-redux'; // src repo imports\n\nimport Adapter from '../../utils/Adapter';\nimport SpellCard from './SpellCard'; // Redux-specific src repo imports\n\nimport { fetchedSpells } from '../../redux/actionCreators';\n\nclass SpellsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    Adapter.get('spells').then(res => res.json()).then(spells => {\n      this.props.fetchedSpells(spells);\n    }).catch(console.log);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.spells.map((spell, index) => React.createElement(SpellCard, {\n      spell: spell,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    spells: state.spells\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchedSpells: spells => {\n    dispatch(fetchedSpells(spells));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpellsPage);","map":{"version":3,"sources":["/Users/trey/development/spell-checker/v2-frontend-spell-checker/src/components/spells/SpellsPage.js"],"names":["React","connect","Adapter","SpellCard","fetchedSpells","SpellsPage","Component","state","name","componentDidMount","get","then","res","json","spells","props","catch","console","log","render","map","spell","index","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAGrCC,KAHqC,GAG7B;AACJC,MAAAA,IAAI,EAAE;AADF,KAH6B;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,OAAO,CAACQ,GAAR,CAAY,QAAZ,EACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,WAAKC,KAAL,CAAWX,aAAX,CAAyBU,MAAzB;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWD,MAAX,CAAkBM,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAyB,MAAA,GAAG,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC,CADL,CADJ;AAKH;;AAtBoC;;AAyBzC,MAAMC,eAAe,GAAGhB,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,MAAM,EAAEP,KAAK,CAACO;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,aAAa,EAAGU,MAAD,IAAY;AAAEW,IAAAA,QAAQ,CAACrB,aAAa,CAACU,MAAD,CAAd,CAAR;AAAiC;AAD1B,CAAL,CAAnC;;AAIA,eAAeb,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["// NPM imports\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n// src repo imports\nimport Adapter from '../../utils/Adapter'\nimport SpellCard from './SpellCard'\n\n// Redux-specific src repo imports\nimport { fetchedSpells } from '../../redux/actionCreators'\n\n\nclass SpellsPage extends React.Component {\n\n    // Local state for controlled filter options\n    state = {\n        name: '',\n    }\n\n    componentDidMount() {\n        Adapter.get('spells')\n            .then(res => res.json())\n            .then(spells => {\n                this.props.fetchedSpells(spells)\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.spells.map((spell, index) => <SpellCard spell={spell} key={index} />)}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        spells: state.spells\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchedSpells: (spells) => { dispatch(fetchedSpells(spells)) },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpellsPage)"]},"metadata":{},"sourceType":"module"}