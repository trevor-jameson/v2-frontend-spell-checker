{"ast":null,"code":"import _objectSpread from \"/Users/trey/development/spell-checker/v2-frontend-spell-checker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport default class Adapter {\n  static post(endpoint, body) {\n    // Destructure headers object to prevent accidental mutation\n    const headers = _objectSpread({}, this.REQUEST_CONFIG.headers); // Add jwt token to request, if not logging in or signing up\n\n\n    if (endpoint !== 'login' && endpoint !== 'signup') {\n      headers.jwt = window.localStorage.getItem('jwt');\n    }\n\n    return fetch(this.BACKEND_URL, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    });\n  }\n\n  static submitLoginOrSignup(e, endpoint, body) {\n    e.preventDefault(); // Destructure object from state ref and nest under required \"user\" key\n\n    this.post(endpoint, {\n      user: _objectSpread({}, body)\n    }).then(res => res.json()).then(res => {\n      window.localStorage.setItem('jwt', res.jwt);\n      console.log(res); // NOTE: Architectural decision needed on where to store global state\n    }).catch(console.table);\n  }\n\n}\nAdapter.BACKEND_URL = 'http://localhost:3000/';\nAdapter.REQUEST_CONFIG = {\n  HEADERS: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};","map":{"version":3,"sources":["/Users/trey/development/spell-checker/v2-frontend-spell-checker/src/utils/Adapter.js"],"names":["Adapter","post","endpoint","body","headers","REQUEST_CONFIG","jwt","window","localStorage","getItem","fetch","BACKEND_URL","method","JSON","stringify","submitLoginOrSignup","e","preventDefault","user","then","res","json","setItem","console","log","catch","table","HEADERS"],"mappings":";AAAA,eAAe,MAAMA,OAAN,CAAc;AAWzB,SAAOC,IAAP,CAAYC,QAAZ,EAAsBC,IAAtB,EAA4B;AAExB;AACA,UAAMC,OAAO,qBAAO,KAAKC,cAAL,CAAoBD,OAA3B,CAAb,CAHwB,CAKxB;;;AACA,QAAKF,QAAQ,KAAK,OAAd,IAA2BA,QAAQ,KAAK,QAA5C,EAAuD;AAACE,MAAAA,OAAO,CAACE,GAAR,GAAcC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAd;AAAiD;;AAEzG,WAAOC,KAAK,CAAC,KAAKC,WAAN,EAAmB;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BR,MAAAA,OAF2B;AAG3BD,MAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHqB,KAAnB,CAAZ;AAKH;;AAED,SAAOY,mBAAP,CAA2BC,CAA3B,EAA8Bd,QAA9B,EAAwCC,IAAxC,EAA8C;AAC1Ca,IAAAA,CAAC,CAACC,cAAF,GAD0C,CAE1C;;AACA,SAAKhB,IAAL,CAAUC,QAAV,EAAoB;AAAEgB,MAAAA,IAAI,oBAAMf,IAAN;AAAN,KAApB,EACKgB,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACTb,MAAAA,MAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,KAA5B,EAAmCF,GAAG,CAACd,GAAvC;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAFS,CAGT;AACH,KANL,EAOKK,KAPL,CAOWF,OAAO,CAACG,KAPnB;AAQH;;AArCwB;AAAR1B,O,CAEVW,W,GAAc,wB;AAFJX,O,CAIVK,c,GAAiB;AACpBsB,EAAAA,OAAO,EAAE;AACL,cAAU,kBADL;AAEL,oBAAgB;AAFX;AADW,C","sourcesContent":["export default class Adapter {\n\n    static BACKEND_URL = 'http://localhost:3000/'\n\n    static REQUEST_CONFIG = {\n        HEADERS: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n    }\n\n    static post(endpoint, body) {\n\n        // Destructure headers object to prevent accidental mutation\n        const headers = {...this.REQUEST_CONFIG.headers}\n\n        // Add jwt token to request, if not logging in or signing up\n        if ((endpoint !== 'login') && (endpoint !== 'signup')) {headers.jwt = window.localStorage.getItem('jwt')}\n\n        return fetch(this.BACKEND_URL, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(body),\n        })\n    }\n\n    static submitLoginOrSignup(e, endpoint, body) {\n        e.preventDefault()\n        // Destructure object from state ref and nest under required \"user\" key\n        this.post(endpoint, { user: {...body} })\n            .then(res => res.json())\n            .then(res => {\n                window.localStorage.setItem('jwt', res.jwt)\n                console.log(res)\n                // NOTE: Architectural decision needed on where to store global state\n            })\n            .catch(console.table)\n    }\n}"]},"metadata":{},"sourceType":"module"}