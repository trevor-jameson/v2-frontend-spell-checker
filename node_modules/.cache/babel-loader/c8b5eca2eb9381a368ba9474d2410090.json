{"ast":null,"code":"var _jsxFileName = \"/Users/trey/development/spell-checker/v2-frontend-spell-checker/src/components/spells/SpellSearch.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchSpells } from '../../redux/actionCreators';\n\nclass SpellSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      spellName: ''\n    };\n\n    this.handleChange = e => this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n  }\n\n  render() {\n    const {\n      spellName\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"spellName\",\n      type: \"text\",\n      value: spellName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.searchSpells(...this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Search Spells\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  searchSpells: spellQuery => dispatch(searchSpells(spellQuery))\n});\n\nexport default connect(null, mapDispatchToProps)(SpellSearch);","map":{"version":3,"sources":["/Users/trey/development/spell-checker/v2-frontend-spell-checker/src/components/spells/SpellSearch.js"],"names":["React","connect","searchSpells","SpellSearch","Component","state","spellName","handleChange","e","setState","currentTarget","name","value","render","props","mapDispatchToProps","dispatch","spellQuery"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACLC,MAAAA,SAAS,EAAE;AADN,KAD8B;;AAAA,SAKtCC,YALsC,GAKtBC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,aAAF,CAAgBC,IAAjB,GAAwBH,CAAC,CAACE,aAAF,CAAgBE;AAA1C,KAAd,CALgB;AAAA;;AAOtCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,KAAK,EAAEC,SAA3C;AAAsD,MAAA,QAAQ,EAAE,KAAKC,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKO,KAAL,CAAWZ,YAAX,CAAwB,GAAG,KAAKG,KAAhC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ;AAMH;;AAfqC;;AAkB1C,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACtCd,EAAAA,YAAY,EAAGe,UAAD,IAAgBD,QAAQ,CAACd,YAAY,CAACe,UAAD,CAAb;AADA,CAAf,CAA3B;;AAIA,eAAehB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCZ,WAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { searchSpells } from '../../redux/actionCreators'\n\nclass SpellSearch extends React.Component {\n    state = {\n       spellName: '' \n    }\n\n    handleChange = (e) => this.setState({ [e.currentTarget.name]: e.currentTarget.value})\n\n    render() {\n        const { spellName } = this.state\n        return(\n            <div>\n                <input name='spellName' type='text' value={spellName} onChange={this.handleChange} />\n                <button onClick={() => this.props.searchSpells(...this.state)}>Search Spells</button>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    searchSpells: (spellQuery) => dispatch(searchSpells(spellQuery))\n})\n\nexport default connect(null, mapDispatchToProps)(SpellSearch)\n"]},"metadata":{},"sourceType":"module"}